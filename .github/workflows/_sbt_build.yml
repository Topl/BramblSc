name: Scala Build

on:
  workflow_call:
    inputs:
      target-os:
        description: 'List of operating systems to build on.'
        default: 'ubuntu-latest'
        required: false
        type: string
      java-versions:
        description: 'List of Java versions to target.'
        default: '11'
        required: false
        type: string
      preserve-cache-between-runs:
        description: 'Preserve project cache between new runs.'
        default: false
        required: false
        type: boolean

jobs:
  build:
    name: Scala Build
    strategy:
      matrix:
        os: ${{fromJson(inputs.target-os)}}
        java: ${{fromJson(inputs.java-versions)}}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Need full history to update last modified time.

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Setup SBT
        run: |
          mkdir -p $HOME/bin/sbt
          set -eux && curl --fail --silent --location --retry 3 https://github.com/sbt/sbt/releases/download/v1.7.1/sbt-1.7.1.tgz | gunzip | tar x -C $HOME/bin/sbt
          echo "$HOME/bin/sbt" >> $GITHUB_PATH

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Cache project
        uses: actions/cache@v3
        with:
          path: |
            **/target/**
            !**/test-results/**
          key: ${{ format('{0}-project-{1}-{2}', runner.os, github.base_ref, github.run_number) }}
          restore-keys: ${{ inputs.preserve-cache-between-runs && format('{0}-project-{1}-', runner.os, github.base_ref) || format('{0}-project-{1}-{2}', runner.os, github.base_ref, github.run_number) }}

      - name: git-restore-mtime
        uses: chetan/git-restore-mtime-action@v1

      - name: Compile and Test
        run: sbt checkPRTestQuick

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-reports
          path: target/test-reports/*.xml
      - name: Cleanup before cache
        shell: bash
        run: |
          rm -rf "$HOME/.ivy2/local" || true
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true
  it:
    name: Integration Tests
    strategy:
      matrix:
        os: ${{fromJson(inputs.target-os)}}
        java: ${{fromJson(inputs.java-versions)}}
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - name: Echo docker version
        uses: docker://docker
        with:
          args: docker -v
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Need full history to update last modified time.
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Setup SBT
        run: |
          mkdir -p $HOME/bin/sbt
          set -eux && curl --fail --silent --location --retry 3 https://github.com/sbt/sbt/releases/download/v1.7.1/sbt-1.7.1.tgz | gunzip | tar x -C $HOME/bin/sbt
          echo "$HOME/bin/sbt" >> $GITHUB_PATH
      - name: Run integration tests
        run: |
          docker run -d --rm --add-host host.docker.internal:host-gateway -p 18444:18444 -p 18443:18443 -p 28332:28332 --name=bitcoind ruimarinho/bitcoin-core -chain=regtest -zmqpubrawblock=tcp://0.0.0.0:28332 -rpcuser=test -rpcpassword=test -port=18444 -rpcport=18443 -rpcbind=:18443 -rpcallowip=0.0.0.0/0
          sbt "integration / test"
          docker kill bitcoind
      - uses: actions/download-artifact@v3
        with:
          path: target/test-reports/
          name: unit-test-reports
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: success()
        with:
          files: |
            integration/target/test-reports/**/*.xml
            integration/target/it-reports/**/*.xml