"use strict";(self.webpackChunkbramblsc_documentation=self.webpackChunkbramblsc_documentation||[]).push([[372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2991:(e,t,n)=>{n.d(t,{Z:()=>b});var r=n(7294),a=n(6010),i=n(2802),o=n(9960),c=n(3919),s=n(5999);const l={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function u(e){let{href:t,children:n}=e;return r.createElement(o.Z,{href:t,className:(0,a.Z)("card padding--lg",l.cardContainer)},n)}function p(e){let{href:t,icon:n,title:i,description:o}=e;return r.createElement(u,{href:t},r.createElement("h2",{className:(0,a.Z)("text--truncate",l.cardTitle),title:i},n," ",i),o&&r.createElement("p",{className:(0,a.Z)("text--truncate",l.cardDescription),title:o},o))}function d(e){let{item:t}=e;const n=(0,i.Wl)(t);return n?r.createElement(p,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function m(e){let{item:t}=e;const n=(0,c.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",a=(0,i.xz)(t.docId??void 0);return r.createElement(p,{href:t.href,icon:n,title:t.label,description:t.description??a?.description})}function f(e){let{item:t}=e;switch(t.type){case"link":return r.createElement(m,{item:t});case"category":return r.createElement(d,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function h(e){let{className:t}=e;const n=(0,i.jA)();return r.createElement(b,{items:n.items,className:t})}function b(e){const{items:t,className:n}=e;if(!t)return r.createElement(h,e);const o=(0,i.MN)(t);return r.createElement("section",{className:(0,a.Z)("row",n)},o.map(((e,t)=>r.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},r.createElement(f,{item:e})))))}},7884:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(7294),a=n(9960),i=n(6550),o=n(8084);function c(e){let{children:t,path:n}=e;var c=function(){const{pathname:e}=(0,i.TH)(),{versions:t}=(0,o.eZ)("docusaurus-plugin-content-docs");return t.find((t=>{let{path:n}=t;return e.startsWith(n)})).name||"current"}();return r.createElement(a.Z,{to:`/scaladoc/${c}/${n}`,target:"_blank"},t)}},3117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),i=n(2991),o=n(7884);const c={sidebar_position:6,title:"Build a Transaction",description:"Learn how to build different types of unproven transactions using the Transaction Builder API. An unproven transaction can be proven and then submitted to the network."},s=void 0,l={unversionedId:"reference/transactions/transactions",id:"reference/transactions/transactions",title:"Build a Transaction",description:"Learn how to build different types of unproven transactions using the Transaction Builder API. An unproven transaction can be proven and then submitted to the network.",source:"@site/docs/reference/transactions/transactions.mdx",sourceDirName:"reference/transactions",slug:"/reference/transactions/",permalink:"/BramblSc/docs/current/reference/transactions/",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Build a Transaction",description:"Learn how to build different types of unproven transactions using the Transaction Builder API. An unproven transaction can be proven and then submitted to the network."},sidebar:"referenceSidebar",previous:{title:"Share a Lock Template",permalink:"/BramblSc/docs/current/reference/locks/share-template"},next:{title:"Mint Tokens",permalink:"/BramblSc/docs/current/reference/transactions/minting"}},u={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Reference",id:"reference",level:2}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Learn how to build different types of unproven transactions using the Transaction Builder API. An unproven transaction can be proven and then submitted to the network."),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"The following requires access to a Transaction Builder Api instance. You can initialize one using the following snippet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"val transactionBuilderApi = TransactionBuilderApi.make[F](MAIN_NETWORK_ID, MAIN_LEDGER_ID)\n")),(0,a.kt)("p",null,"Where ",(0,a.kt)("inlineCode",{parentName:"p"},"F")," is a type parameter bound to a context parameter of type ",(0,a.kt)("inlineCode",{parentName:"p"},"Monad[F]"),". See the ",(0,a.kt)("inlineCode",{parentName:"p"},"make"),"\nfunction's ",(0,a.kt)(o.Z,{path:"co/topl/brambl/builders/TransactionBuilderApi$.html",mdxType:"ScaladocLink"},"signature"),". For example,\nif you are using Cats Effect ",(0,a.kt)("inlineCode",{parentName:"p"},"IO"),", you can initialize the Transaction Builder Api as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala"},"import cats.effect.IO\nimport co.topl.brambl.builders.TransactionBuilderApi\nimport co.topl.brambl.constants.NetworkConstants.{MAIN_LEDGER_ID, MAIN_NETWORK_ID}\n\nval transactionBuilderApi = TransactionBuilderApi.make[IO](MAIN_NETWORK_ID, MAIN_LEDGER_ID)\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"MAIN_NETWORK_ID")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"MAIN_LEDGER_ID")," refer to the IDs of Topl's main network and ledger, respectfully. If you\nwish to use a different network or ledger, you can find the IDs of all available networks and ledgers in\nthe ",(0,a.kt)(o.Z,{path:"co/topl/brambl/constants/NetworkConstants$.html",mdxType:"ScaladocLink"},(0,a.kt)("code",null,"NetworkConstants"))," object.")),(0,a.kt)("h2",{id:"reference"},"Reference"),(0,a.kt)(i.Z,{mdxType:"DocCardList"}))}f.isMDXComponent=!0}}]);